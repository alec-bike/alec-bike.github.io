{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Welcome to The Bike Project.</p>"},{"location":"CONFIG/","title":"Config Files","text":""},{"location":"CONFIG/#zsh","title":"zsh","text":"<p><code>~/.zprofile</code></p> <pre><code># set homebrew paths\neval \"$(/opt/homebrew/bin/brew shellenv)\"\n\n# set uv (and other rust tools) path\nsource $HOME/.cargo/env\n\n# set local path\nexport PATH=\"$HOME/.local/bin:$PATH:/Library/Developer/CommandLineTools/usr/bin\"\n</code></pre> <p><code>~/.zshrc</code></p> <pre><code># modern alternates\nalias ls='eza'\nalias la='eza -a'\nalias ll='eza -alh --git'\nalias vi='hx'\n\n# shell options\nsetopt INTERACTIVE_COMMENTS\nsetopt HIST_IGNORE_ALL_DUPS\nbindkey '^[[A' up-line-or-search\nbindkey '^[[B' down-line-or-search\n\n# shell autocomplete\nfpath+=$HOME/.zfunc\nautoload -Uz compinit\ncompinit\n\n# uv completion\neval \"$(uv --generate-shell-completion zsh)\"\neval \"$(uvx --generate-shell-completion zsh)\"\n\n# starship completion\neval \"$(starship init zsh)\"\n</code></pre>"},{"location":"CONFIG/#ghostty","title":"ghostty","text":"<p><code>~/.config/ghostty/config</code></p> <pre><code>theme = MaterialDarker\nmacos-titlebar-style = tabs\nmouse-hide-while-typing = true\n</code></pre>"},{"location":"CONFIG/#helix","title":"helix","text":"<p><code>~/.config/helix/config.toml</code></p> <pre><code>theme = \"material_darker\"\n\n[keys.normal]\nZ = { Z = \":wq\" }\nD = \"kill_to_line_end\"\n\"#\" = \"toggle_comments\"\n</code></pre> <p><code>~/.config/helix/languages.toml</code></p> <pre><code>[[language]]\nname = \"python\"\nlanguage-servers = [\"basedpyright\", \"ruff\"]\nauto-format = true\nformatter = { command = \"ruff\", args = [\"format\", \"-\" ] }\nfile-types = [\"py\"]\nroots = [\"pyproject.toml\", \"uv.lock\"]\n\n[[language]]\nname = \"rust\"\nlanguage-servers = [\"rust-analyzer\"]\nauto-format = true\nformatter = { command = \"rustfmt\" }\nfile-types = [\"rs\"]\nroots = [\"Cargo.toml\", \"Cargo.lock\"]\n\n[[language]]\nname = \"cpp\"\nlanguage-servers = [\"clangd\"]\nauto-format = false\nformatter = { command = \"clang-format\" }\nfile-types = [\"cpp\",\"hpp\",\"ino\"]\n\n[[language]]\nname = \"c\"\nlanguage-servers = [\"clangd\"]\nauto-format = false\nformatter = { command = \"clang-format\" }\nfile-types = [\"c\",\"h\"]\n\n[[language]]\nname = \"markdown\"\nauto-format = true\nformatter = { command = \"mdformat\", args = [\"-\"] }\nfile-types = [\"md\"]\ntext-width = 100\nsoft-wrap = { enable = true, wrap-at-text-width = true }\n</code></pre>"},{"location":"INSTALL/","title":"Install","text":"<pre><code># clone git repo\ngit clone git@github.com:alec-bike/alec-bike.github.io.git\ncd alec-bike.github.io\n\n# add dev dependencies (documentation and lint/format)\nuv add mkdocs-material mdformat-mkdocs mdformat-footnote --dev\n\n# build documentation and test locally\nuv run mkdocs serve\n\n# deploy site to github\n# note: ensure 'gh-pages' is set as default branch in GitHub Pages\nuv run mkdocs gh-deploy --force\n</code></pre>"},{"location":"INSTALL/#update","title":"Update","text":"<pre><code>uv sync\nuv tree --outdated --depth 1\nuv run mdformat docs\nuv run mkdocs build\n</code></pre>"}]}